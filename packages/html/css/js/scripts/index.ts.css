/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ../../node_modules/.pnpm/css-loader@6.6.0_webpack@5.68.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/.pnpm/postcss-loader@6.2.1_postcss@8.4.6+webpack@5.68.0/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../node_modules/.pnpm/sass-loader@12.4.0_sass@1.49.7+webpack@5.68.0/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[3]!./src/styles/index.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@charset "UTF-8";
/**
* Sass CSS triangle mixin, create any kind of triangles with ease

* Use:
* @include triangle(direction,width,height,color);

* Example:
* $square: 50px;
* $color: red;
* selector {
*	 @include triangle(bottomright,$square,$square,$color);
* }
*/
/**
 * Как использовать:
 * $gutter - опциональный параметр
 *
 * @include width(7, $gutter);
 * @include pullRight(1);
 * margin-right: $gutter;   or   margin-left: $gutter;
 */
* {
  margin: 0;
  outline: none;
  padding: 0;
}

*,
::before,
::after {
  box-sizing: border-box;
}

/**
 * 1. Add text decoration inheritance in all browsers
 * 2. Add vertical alignment inheritance in all browsers
 */
::before,
::after {
  vertical-align: inherit;
  /* 2 */
  text-decoration: inherit;
  /* 1 */
}

/**
 * 1. Use the default cursor in all browsers (opinionated).
 * 2. Change the line height in all browsers (opinionated).
 * 3. Use a 4-space tab width in all browsers (opinionated).
 * 4. Remove the grey highlight on links in iOS (opinionated).
 * 5. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 * 6. Breaks words to prevent overflow in all browsers (opinionated).
 */
html {
  line-height: 1.5;
  /* 2 */
  word-break: break-word;
  /* 6 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  -ms-text-size-adjust: 100%;
  /* 5 */
  -webkit-text-size-adjust: 100%;
  /* 5 */
  -webkit-tap-highlight-color: transparent;
  cursor: default;
  /* 1 */
}

/**
 * 1. Add the correct sizing in Firefox.
 * 2. Show the overflow in Edge 18- and IE.
 */
hr {
  overflow: visible;
  /* 2 */
  height: 0;
  /* 1 */
}

p {
  margin: 5px 0 10px;
}

a {
  text-decoration: none;
  color: inherit;
  background-color: transparent;
  cursor: pointer;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  /* stylelint-disable-next-line */
  font-weight: bolder;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Remove the border on iframes in all browsers
 */
iframe {
  border-style: none;
}

ul,
ol {
  list-style: none;
}

/**
 * Remove the margin on controls in Safari.
 */
button,
input,
select {
  margin: 0;
}

/**
 * 1. Show the overflow in IE.
 * 2. Remove the inheritance of text transform in Edge 18-, Firefox, and IE.
 */
button {
  overflow: visible;
  /* 1 */
  font-family: inherit;
  text-transform: none;
  /* 2 */
}

input,
textarea {
  border-radius: 0;
  box-shadow: none;
  font-family: inherit;
}
input::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
}
input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  opacity: 1;
}
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
}
input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
}
input::placeholder,
textarea::placeholder {
  opacity: 1;
}

input[type=search]::-webkit-search-cancel-button {
  display: none;
}

[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements in all browsers (opinionated).
 */
[disabled] {
  cursor: not-allowed;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-moz-placeholder {
  color: inherit;
  opacity: 0.54;
}
:-ms-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
::placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * Remove the inner padding in Chrome, Edge, and Safari on macOS.
 */
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style upload buttons in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Remove the inner border and padding of focus outlines in Firefox.
 */
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Remove the additional :invalid styles in Firefox.
 */
:-moz-ui-invalid {
  box-shadow: none;
}

/*
 * Add the correct styles in Edge 18-, IE, and Safari.
 */
dialog {
  position: absolute;
  left: 0;
  right: 0;
  display: block;
  margin: auto;
  border: solid;
  padding: 1em;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  color: #000;
  background-color: #fff;
}

dialog:not([open]) {
  display: none;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/*
 * 1. Remove the tapping delay in IE 10.
 * 2. Remove the tapping delay on clickable elements
      in all browsers (opinionated).
 */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  /* 1 */
  touch-action: manipulation;
  /* 2 */
}

/*
 * Pre-formatted and code-formatted text uses the monospace system font
 */
code,
kbd,
pre,
samp {
  font-family: "Menlo", "Fira Code", "Cascadia Code", "Consolas", "Inconsolata", "Monaco", "Roboto Mono", "Droid Sans Mono", "Ubuntu Mono", "Ubuntu Monospace", "Source Code Pro", "Noto Mono", "Oxygen Mono", "Liberation Mono", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary,
svg {
  display: block;
}

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
svg:not([fill]) {
  fill: currentColor;
}

html,
body {
  height: 100%;
}

body {
  position: relative;
  font-family: "Montserrat", system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, "Segoe UI", "Roboto", "Ubuntu", "Cantarell", "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  line-height: 1.6;
  color: #000;
}

.layout-playground {
  display: grid;
  grid-template-columns: 350px 1fr;
  grid-column-gap: 20px;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/